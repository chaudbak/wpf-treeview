<Window x:Class="TreeView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TreeView"
        mc:Ignorable="d"
        Title="MainWindow"         
        Height="750"
        Width="1230">
    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="3"
                      CaptionHeight="0"
                      CornerRadius="0"
                      GlassFrameThickness="1" />
    </WindowChrome.WindowChrome>
    <Grid>
        <TreeView 
          x:Name="tvMain"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          Foreground="{x:Null}"
          BorderBrush="{x:Null}"
          Background="WhiteSmoke"
          mc:Ignorable="d"
          Height="660" 
          Width="300" 
          VerticalAlignment="Top" 
          HorizontalAlignment="Left" SelectedItemChanged="tvMain_SelectedItemChanged">
            <TreeView.Resources>
                <Style x:Key="TreeViewItemFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill"
                         Color="#FF595959" />
                <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke"
                         Color="#FF262626" />
                <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke"
                         Color="#FF27C7F7" />
                <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill"
                         Color="#FFCCEEFB" />
                <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke"
                         Color="#FF1CC4F7" />
                <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill"
                         Color="#FF82DFFB" />
                <PathGeometry x:Key="TreeArrow"
                      Figures="M0,0 L0,6 L6,0 z" />
                <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill"
                         Color="#FFFFFFFF" />
                <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke"
                         Color="#FF818181" />
                <Style x:Key="ExpandCollapseToggleStyle"
               TargetType="{x:Type ToggleButton}">
                    <Setter Property="Focusable"
                    Value="False" />
                    <Setter Property="Width"
                    Value="16" />
                    <Setter Property="Height"
                    Value="16" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border Background="Transparent"
                                Height="16"
                                Padding="5,5,5,5"
                                Width="16">
                                    <Path x:Name="ExpandPath"
                                  Data="{StaticResource TreeArrow}"
                                  Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
                                  Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="135"
                                                     CenterY="3"
                                                     CenterX="3" />
                                        </Path.RenderTransform>
                                    </Path>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked"
                                     Value="True">
                                        <Setter Property="RenderTransform"
                                        TargetName="ExpandPath">
                                            <Setter.Value>
                                                <RotateTransform Angle="180"
                                                         CenterY="3"
                                                         CenterX="3" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Fill"
                                        TargetName="ExpandPath"
                                        Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
                                        <Setter Property="Stroke"
                                        TargetName="ExpandPath"
                                        Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver"
                                     Value="True">
                                        <Setter Property="Stroke"
                                        TargetName="ExpandPath"
                                        Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
                                        <Setter Property="Fill"
                                        TargetName="ExpandPath"
                                        Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver"
                                               Value="True" />
                                            <Condition Property="IsChecked"
                                               Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Stroke"
                                        TargetName="ExpandPath"
                                        Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
                                        <Setter Property="Fill"
                                        TargetName="ExpandPath"
                                        Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="TreeBrushGreen"
                         Color="#FF34C687" />
                <!-- Tree Level 1, Design, Results, etc ... -->
                <Style x:Key="TreeViewItemStyle1"
               TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Background"
                    Value="Transparent" />
                    <Setter Property="HorizontalContentAlignment"
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="VerticalContentAlignment"
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="Padding"
                    Value="1,0,0,0" />
                    <Setter Property="Foreground"
                    Value="#FF666666" />
                    <Setter Property="FocusVisualStyle"
                    Value="{StaticResource TreeViewItemFocusVisual}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="Storyboard1">
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)"
                                                                Storyboard.TargetName="Expander">
                                            <DiscreteBooleanKeyFrame KeyTime="0"
                                                             Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Grid x:Name="grid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19"
                                                  Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition From="Selected"
                                                          GeneratedDuration="0" />
                                            </VisualStateGroup.Transitions>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <ToggleButton Content="Design"
                                          x:Name="Expander"
                                          ClickMode="Press"
                                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                          Margin="5,0,100,0"
                                          IsThreeState="False"
                                          Background="{x:Null}"
                                          BorderBrush="{x:Null}"
                                          Foreground="#FF666666"
                                          Style="{DynamicResource ToggleButtonDesign}"
                                          Cursor="Hand"
                                          HorizontalAlignment="Left"
                                          Grid.Column="2"
                                          Width="Auto" />
                                    <Border x:Name="Bd"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Grid.Column="1"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="PART_Header"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost"
                                            Grid.ColumnSpan="2"
                                            Grid.Column="1"
                                            Grid.Row="1" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"
                                     Value="True">
                                        <Setter Property="Background"
                                        TargetName="grid"
                                        Value="White" />
                                        <Setter Property="Foreground"
                                        TargetName="Expander"
                                        Value="#FF999999" />
                                        <Setter Property="OpacityMask" TargetName="PART_Header" Value="Black"/>
                                    </Trigger>
                                    <Trigger Property="IsExpanded"
                                     Value="false">
                                        <Setter Property="Visibility"
                                        TargetName="ItemsHost"
                                        Value="Collapsed" />
                                        <Setter Property="BorderBrush"
                                        TargetName="Expander"
                                        Value="{x:Null}" />
                                    </Trigger>
                                    <Trigger Property="IsExpanded"
                                     Value="True">
                                        <Setter Property="Foreground"
                                        TargetName="Expander"
                                        Value="{DynamicResource TreeBrushGreen}" />
                                    </Trigger>
                                    <Trigger Property="IsExpanded"
                                     Value="False" />
                                    <Trigger Property="IsFocused"
                                     Value="False" />
                                    <Trigger Property="HasItems"
                                     Value="false">
                                        <Setter Property="Visibility"
                                        TargetName="Expander"
                                        Value="Hidden" />
                                    </Trigger>
                                    <Trigger Property="IsSelected"
                                     Value="true">
                                        <Setter Property="Opacity"
                                        TargetName="PART_Header"
                                        Value="1" />
                                        <Setter Property="IsEnabled"
                                        TargetName="PART_Header"
                                        Value="True" />
                                        <Setter Property="OpacityMask"
                                        TargetName="PART_Header"
                                        Value="Black" />
                                        <Setter Property="Foreground"
                                        Value="{DynamicResource TreeBrushGreen}" />
                                        <Setter Property="Foreground"
                                        TargetName="Expander"
                                        Value="{DynamicResource TreeBrushGreen}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected"
                                               Value="true" />
                                            <Condition Property="IsSelectionActive"
                                               Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                                        <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                                        <Setter Property="Foreground"
                                        TargetName="Expander"
                                        Value="{DynamicResource TreeBrushGreen}" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled"
                                     Value="false">
                                        <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Cursor"
                    Value="Hand" />
                    <Setter Property="HorizontalAlignment"
                    Value="Left" />
                    <Style.Triggers>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing"
                         Value="true">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground"
                            Value="{DynamicResource TreeBrushGreen}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FF999999"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                         Value="True">
                            <Setter Property="Foreground"
                            Value="{DynamicResource TreeBrushGreen}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <SolidColorBrush x:Key="TreeBrushBlue"
                         Color="#FF3394C7" />
                <!-- Tree Level 2, Setup, Load, Components, etc ... -->
                <Style x:Key="TreeViewItemStyle2"
               TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Background"
                    Value="Transparent" />
                    <Setter Property="HorizontalContentAlignment"
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="VerticalContentAlignment"
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="Padding"
                    Value="1,0,0,0" />
                    <Setter Property="Foreground"
                    Value="#FF333333" />
                    <Setter Property="FocusVisualStyle"
                    Value="{StaticResource TreeViewItemFocusVisual}" />
                    <Setter Property="Cursor"
                    Value="Hand" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected"
                         Value="True">
                            <Setter Property="Foreground"
                            Value="{DynamicResource TreeBrushBlue}" />
                        </Trigger>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing"
                         Value="true">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground"
                            Value="{DynamicResource TreeBrushBlue}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <SolidColorBrush x:Key="TreeBrushOrange"
                         Color="#FFFAB627" />
                <!-- Tree Level 3, treeview items inside Components, Resources, Project ... -->
                <Style x:Key="TreeViewItemStyle3"
               TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Background"
                    Value="Transparent" />
                    <Setter Property="HorizontalContentAlignment"
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="VerticalContentAlignment"
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="Padding"
                    Value="1,0,0,0" />
                    <Setter Property="Foreground"
                    Value="#FF666666" />
                    <Setter Property="FocusVisualStyle"
                    Value="{StaticResource TreeViewItemFocusVisual}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19"
                                                  Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <ToggleButton x:Name="Expander"
                                          ClickMode="Press"
                                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource ExpandCollapseToggleStyle}" />
                                    <Border x:Name="Bd"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Grid.Column="1"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="PART_Header"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost"
                                            Grid.ColumnSpan="2"
                                            Grid.Column="1"
                                            Grid.Row="1" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded"
                                     Value="false">
                                        <Setter Property="Visibility"
                                        TargetName="ItemsHost"
                                        Value="Collapsed" />
                                    </Trigger>
                                    <Trigger Property="HasItems"
                                     Value="false">
                                        <Setter Property="Visibility"
                                        TargetName="Expander"
                                        Value="Hidden" />
                                    </Trigger>
                                    <Trigger Property="IsSelected"
                                     Value="true">
                                        <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                        <Setter Property="OpacityMask"
                                        TargetName="PART_Header"
                                        Value="{x:Null}" />
                                        <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{x:Null}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected"
                                               Value="true" />
                                            <Condition Property="IsSelectionActive"
                                               Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                                        <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled"
                                     Value="false">
                                        <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Cursor"
                    Value="Hand" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected"
                         Value="True">
                            <Setter Property="Foreground"
                            Value="{DynamicResource TreeBrushOrange}" />
                        </Trigger>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing"
                         Value="true">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground"
                            Value="{DynamicResource TreeBrushOrange}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="LabelStyleOrange"
               TargetType="{x:Type Label}">
                    <Setter Property="Background"
                    Value="#00666666" />
                    <Setter Property="Padding"
                    Value="5" />
                    <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
                    <Setter Property="VerticalContentAlignment"
                    Value="Top" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Label}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="ValidationStates" />
                                    </VisualStateManager.VisualStateGroups>
                                    <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground"
                    Value="#FF666666" />
                </Style>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1"
                                   StrokeDashArray="1 2" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background"
                         Color="#FFDDDDDD" />
                <SolidColorBrush x:Key="Button.Static.Border"
                         Color="#FF707070" />
                <SolidColorBrush x:Key="Button.MouseOver.Background"
                         Color="#FFBEE6FD" />
                <SolidColorBrush x:Key="Button.MouseOver.Border"
                         Color="#FF3C7FB1" />
                <SolidColorBrush x:Key="Button.Pressed.Background"
                         Color="#FFC4E5F6" />
                <SolidColorBrush x:Key="Button.Pressed.Border"
                         Color="#FF2C628B" />
                <SolidColorBrush x:Key="Button.Disabled.Background"
                         Color="#FFF4F4F4" />
                <SolidColorBrush x:Key="Button.Disabled.Border"
                         Color="#FFADB2B5" />
                <SolidColorBrush x:Key="Button.Disabled.Foreground"
                         Color="#FF838383" />
                <SolidColorBrush x:Key="BrushDefault"
                         Color="#FF666666" />
                <Style x:Key="ButtonStyleTreeOrange"
               TargetType="{x:Type Button}">
                    <Style.Triggers>
                        <Trigger Property="IsPressed"
                         Value="True">
                            <Setter Property="Foreground"
                            Value="{DynamicResource TreeBrushOrange}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                         Value="True">
                            <Setter Property="Foreground"
                            Value="{DynamicResource TreeBrushOrange}" />
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="Command"
                    Value="{Binding NavigateCommand}" />
                    <Setter Property="FocusVisualStyle"
                    Value="{StaticResource FocusVisual}" />
                    <Setter Property="Background"
                    Value="{StaticResource Button.Static.Background}" />
                    <Setter Property="BorderBrush"
                    Value="{StaticResource Button.Static.Border}" />
                    <Setter Property="Foreground"
                    Value="#FF666666" />
                    <Setter Property="BorderThickness"
                    Value="1" />
                    <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
                    <Setter Property="VerticalContentAlignment"
                    Value="Center" />
                    <Setter Property="Padding"
                    Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true"
                                HorizontalAlignment="Left">
                                    <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"
                                     Value="true">
                                        <Setter Property="OpacityMask"
                                        TargetName="contentPresenter"
                                        Value="Black" />
                                        <Setter Property="Background"
                                        TargetName="border"
                                        Value="{x:Null}" />
                                        <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{x:Null}" />
                                        <Setter Property="FontWeight"
                                        Value="Bold" />
                                        <Setter Property="FontFamily"
                                        Value="Lato Medium" />
                                        <Setter Property="Foreground"
                                        Value="{DynamicResource BrushDefault}" />
                                        <Setter Property="Opacity"
                                        Value="0.75" />
                                    </Trigger>
                                    <Trigger Property="IsPressed"
                                     Value="true">
                                        <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{x:Null}" />
                                        <Setter Property="Foreground"
                                        Value="{DynamicResource TreeBrushOrange}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled"
                                     Value="false">
                                        <Setter Property="TextElement.Foreground"
                                        TargetName="contentPresenter"
                                        Value="{StaticResource Button.Disabled.Foreground}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin"
                    Value="4,0,0,0" />
                </Style>
                <Style x:Key="SeparatorStyleNoClick"
               TargetType="{x:Type Separator}">
                    <Setter Property="Margin"
                    Value="0,2,0,2" />
                    <Setter Property="Focusable"
                    Value="false" />
                    <Setter Property="Height"
                    Value="1" />
                    <Setter Property="Width"
                    Value="170" />
                    <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
                    <Setter Property="VerticalAlignment"
                    Value="Bottom" />
                    <Setter Property="Background"
                    Value="#FFAAAAAA" />
                    <Setter Property="Opacity"
                    Value="0.5" />
                    <Setter Property="Cursor"
                    Value="None" />
                    <Setter Property="IsEnabled"
                    Value="False" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Separator}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Height="1"
                                SnapsToDevicePixels="true"
                                Cursor="None" />
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Border.BorderBrush"
                                     Value="{x:Null}" />
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="ButtonStyleTreeBlue"
               TargetType="{x:Type Button}">
                    <Setter Property="Command"
                    Value="{Binding NavigateCommand}" />
                    <Setter Property="FocusVisualStyle"
                    Value="{StaticResource FocusVisual}" />
                    <Setter Property="Background"
                    Value="{StaticResource Button.Static.Background}" />
                    <Setter Property="BorderBrush"
                    Value="{StaticResource Button.Static.Border}" />
                    <Setter Property="Foreground"
                    Value="#FF666666" />
                    <Setter Property="BorderThickness"
                    Value="1" />
                    <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
                    <Setter Property="VerticalContentAlignment"
                    Value="Center" />
                    <Setter Property="Padding"
                    Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true"
                                HorizontalAlignment="Left">
                                    <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"
                                     Value="true">
                                        <Setter Property="OpacityMask"
                                        TargetName="contentPresenter"
                                        Value="Black" />
                                        <Setter Property="Background"
                                        TargetName="border"
                                        Value="{x:Null}" />
                                        <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{x:Null}" />
                                        <Setter Property="FontWeight"
                                        Value="Bold" />
                                        <Setter Property="FontFamily"
                                        Value="Lato Medium" />
                                        <Setter Property="Foreground"
                                        Value="{DynamicResource BrushDefault}" />
                                        <Setter Property="Opacity"
                                        Value="0.75" />
                                    </Trigger>
                                    <Trigger Property="IsPressed"
                                     Value="true">
                                        <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{x:Null}" />
                                        <Setter Property="Foreground"
                                        Value="{DynamicResource TreeBrushBlue}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled"
                                     Value="false">
                                        <Setter Property="TextElement.Foreground"
                                        TargetName="contentPresenter"
                                        Value="{StaticResource Button.Disabled.Foreground}" />
                                        <Setter Property="Foreground"
                                        Value="{DynamicResource TreeBrushBlue}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin"
                    Value="4,0,0,0" />
                    <Setter Property="IsHitTestVisible"
                    Value="True" />
                    <Style.Triggers>
                        <Trigger Property="IsPressed"
                         Value="True">
                            <Setter Property="Foreground"
                            Value="{DynamicResource TreeBrushBlue}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                         Value="True">
                            <Setter Property="Foreground"
                            Value="#FF999999" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                         Value="True">
                            <Setter Property="Foreground"
                            Value="{DynamicResource TreeBrushBlue}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <ControlTemplate x:Key="InternalScrollTree"
                         TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid"
                  Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner"
                           Grid.Column="1"
                           Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                           Grid.Row="1" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                        CanHorizontallyScroll="False"
                                        CanVerticallyScroll="True"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}"
                                        Grid.Column="0"
                                        Margin="{TemplateBinding Padding}"
                                        Grid.Row="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                           AutomationProperties.AutomationId="VerticalScrollBar"
                           Cursor="Arrow"
                           Grid.Column="1"
                           Maximum="{TemplateBinding ScrollableHeight}"
                           Minimum="0"
                           Grid.Row="0"
                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           ViewportSize="{TemplateBinding ViewportHeight}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                           AutomationProperties.AutomationId="HorizontalScrollBar"
                           Cursor="Arrow"
                           Grid.Column="0"
                           Maximum="{TemplateBinding ScrollableWidth}"
                           Minimum="0"
                           Orientation="Horizontal"
                           Grid.Row="1"
                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           ViewportSize="{TemplateBinding ViewportWidth}"
                           FontFamily="Lato Medium" />
                    </Grid>
                </ControlTemplate>
                <Style x:Key="ToggleButtonDesign"
               TargetType="{x:Type ToggleButton}">
                    <Setter Property="FocusVisualStyle"
                    Value="{StaticResource FocusVisual}" />
                    <Setter Property="Background"
                    Value="{StaticResource Button.Static.Background}" />
                    <Setter Property="BorderBrush"
                    Value="{StaticResource Button.Static.Border}" />
                    <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Setter Property="BorderThickness"
                    Value="1" />
                    <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
                    <Setter Property="VerticalContentAlignment"
                    Value="Center" />
                    <Setter Property="Padding"
                    Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="Right"
                                              Margin="0,1,38.813,1"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted"
                                     Value="true" />
                                    <Trigger Property="IsMouseOver"
                                     Value="true">
                                        <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{x:Null}" />
                                        <Setter Property="Background"
                                        TargetName="border"
                                        Value="{x:Null}" />
                                    </Trigger>
                                    <Trigger Property="IsPressed"
                                     Value="true">
                                        <Setter Property="Background"
                                        TargetName="border"
                                        Value="{x:Null}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled"
                                     Value="false">
                                        <Setter Property="TextElement.Foreground"
                                        TargetName="contentPresenter"
                                        Value="{StaticResource Button.Disabled.Foreground}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="NavigationTreeIconStyle"
               TargetType="{x:Type Rectangle}">
                    <Setter Property="Height"
                    Value="20" />
                    <Setter Property="Width"
                    Value="20" />
                    <Setter Property="Stretch"
                    Value="Fill" />
                    <Setter Property="HorizontalAlignment"
                    Value="Left" />
                    <Setter Property="VerticalAlignment"
                    Value="Top" />
                    <Setter Property="Margin"
                    Value="0,2,0,0" />
                </Style>
                <SolidColorBrush x:Key="BrushStyleGreen" Color="#FFFAB627"/>
                <Style x:Key="ButtonStyleTreeGreen"
            TargetType="{x:Type Button}">
                    <Setter Property="Command"
                Value="{Binding NavigateCommand}" />
                    <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
                    <Setter Property="Background"
                Value="{StaticResource Button.Static.Background}" />
                    <Setter Property="BorderBrush"
                Value="{StaticResource Button.Static.Border}" />
                    <Setter Property="Foreground"
                Value="#FF666666" />
                    <Setter Property="BorderThickness"
                Value="1" />
                    <Setter Property="HorizontalContentAlignment"
                Value="Center" />
                    <Setter Property="VerticalContentAlignment"
                Value="Center" />
                    <Setter Property="Padding"
                Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Left">
                                    <ContentPresenter x:Name="contentPresenter"
                                Focusable="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"
                                Value="true">
                                        <Setter Property="OpacityMask"
                                    TargetName="contentPresenter"
                                    Value="Black" />
                                        <Setter Property="Background"
                                    TargetName="border"
                                    Value="{x:Null}" />
                                        <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{x:Null}" />
                                        <Setter Property="FontWeight"
                                    Value="Bold" />
                                        <Setter Property="FontFamily"
                                    Value="Lato Medium" />
                                        <Setter Property="Foreground"
                                    Value="{DynamicResource BrushDefault}" />
                                        <Setter Property="Opacity"
                                    Value="0.75" />
                                    </Trigger>
                                    <Trigger Property="IsPressed"
                                Value="true">
                                        <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{x:Null}" />
                                        <Setter Property="Foreground"
                                    Value="{DynamicResource TreeBrushOrange}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled"
                                Value="false">
                                        <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Button.Disabled.Foreground}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin"
                Value="4,0,0,0" />
                    <Style.Triggers>
                        <Trigger Property="IsPressed"
                    Value="True">
                            <Setter Property="Foreground" 
                            Value="#FF34C687"/>
                        </Trigger>
                        <Trigger Property="IsFocused"
                    Value="True">
                            <Setter Property="Foreground"
                            Value="#FF34C687" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <SolidColorBrush x:Key="BrushStylePurple" Color="#FF802145"/>
                <Style x:Key="ButtonStyleTreePurple"
            TargetType="{x:Type Button}">
                    <Setter Property="Command"
                Value="{Binding NavigateCommand}" />
                    <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
                    <Setter Property="Background"
                Value="{StaticResource Button.Static.Background}" />
                    <Setter Property="BorderBrush"
                Value="{StaticResource Button.Static.Border}" />
                    <Setter Property="Foreground"
                Value="#FF666666" />
                    <Setter Property="BorderThickness"
                Value="1" />
                    <Setter Property="HorizontalContentAlignment"
                Value="Center" />
                    <Setter Property="VerticalContentAlignment"
                Value="Center" />
                    <Setter Property="Padding"
                Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Left">
                                    <ContentPresenter x:Name="contentPresenter"
                                Focusable="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"
                                Value="true">
                                        <Setter Property="OpacityMask"
                                    TargetName="contentPresenter"
                                    Value="Black" />
                                        <Setter Property="Background"
                                    TargetName="border"
                                    Value="{x:Null}" />
                                        <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{x:Null}" />
                                        <Setter Property="FontWeight"
                                    Value="Bold" />
                                        <Setter Property="FontFamily"
                                    Value="Lato Medium" />
                                        <Setter Property="Foreground"
                                    Value="{DynamicResource BrushDefault}" />
                                        <Setter Property="Opacity"
                                    Value="0.75" />
                                    </Trigger>
                                    <Trigger Property="IsPressed"
                                Value="true">
                                        <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{x:Null}" />
                                        <Setter Property="Foreground"
                                    Value="{DynamicResource TreeBrushOrange}" />
                                        <Setter Property="Background" Value="Black"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled"
                                Value="false">
                                        <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Button.Disabled.Foreground}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin"
                Value="4,0,0,0" />
                    <Style.Triggers>
                        <Trigger Property="IsPressed"
                    Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource BrushStylePurple}"/>
                        </Trigger>
                        <Trigger Property="IsFocused"
                    Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource BrushStylePurple}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <SolidColorBrush x:Key="BrushStyleBlue" Color="#FF3394C7"/>
                <Style x:Key="ButtonStyleTreeBlueStart"
            TargetType="{x:Type Button}">
                    <Setter Property="Command"
                Value="{Binding NavigateCommand}" />
                    <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
                    <Setter Property="Background"
                Value="{StaticResource Button.Static.Background}" />
                    <Setter Property="BorderBrush"
                Value="{StaticResource Button.Static.Border}" />
                    <Setter Property="Foreground"
                Value="#FF3394C7" />
                    <Setter Property="BorderThickness"
                Value="1" />
                    <Setter Property="HorizontalContentAlignment"
                Value="Center" />
                    <Setter Property="VerticalContentAlignment"
                Value="Center" />
                    <Setter Property="Padding"
                Value="1" />
                    <Setter Property="IsDefault"
                Value="True" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Left">
                                    <ContentPresenter x:Name="contentPresenter"
                                Focusable="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"
                                Value="true">
                                        <Setter Property="OpacityMask"
                                    TargetName="contentPresenter"
                                    Value="Black" />
                                        <Setter Property="Background"
                                    TargetName="border"
                                    Value="{x:Null}" />
                                        <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{x:Null}" />
                                        <Setter Property="FontWeight"
                                    Value="Bold" />
                                        <Setter Property="FontFamily"
                                    Value="Lato Medium" />
                                        <Setter Property="Foreground"
                                    Value="{DynamicResource BrushDefault}" />
                                        <Setter Property="Opacity"
                                    Value="0.75" />
                                    </Trigger>
                                    <Trigger Property="IsPressed"
                                Value="true">
                                        <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{x:Null}" />
                                        <Setter Property="Foreground"
                                    Value="{DynamicResource TreeBrushBlue}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled"
                                Value="false">
                                        <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Button.Disabled.Foreground}" />
                                        <Setter Property="Foreground" Value="#FF3394C7"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin"
                Value="4,0,0,0" />
                    <Setter Property="IsHitTestVisible"
                Value="True" />
                    <Style.Triggers>
                        <Trigger Property="IsPressed"
                    Value="True">
                            <Setter Property="Foreground"
                        Value="{DynamicResource TreeBrushBlue}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                    Value="True">
                            <Setter Property="Foreground"
                        Value="#FF999999" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                    Value="True">
                            <Setter Property="Foreground"
                        Value="{DynamicResource TreeBrushBlue}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="Foreground" Value="#FF666666"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <!--Treeview Item Checkbox to expand by single click-->
                <Style x:Key="TreeViewItemCB" TargetType="CheckBox">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="CheckBox">
                                <ContentPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" RecognizesAccessKey="True"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <!-- Tree View Toggle Button "Components" -->

                <ControlTemplate x:Key="ToggleButtonComponents" TargetType="{x:Type TreeViewItem}">
                    <CheckBox IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Style="{DynamicResource TreeViewItemCB}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" 
                                      Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" 
                              ClickMode="Press" 
                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              Margin="-20,0,0,0">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Focusable" 
                                    Value="False"/>
                                        <Setter Property="Width" 
                                    Value="16"/>
                                        <Setter Property="Height" 
                                    Value="16"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="Transparent" 
                                                Height="16" 
                                                Padding="5" 
                                                Width="16">
                                                        <Path x:Name="ExpandPath" 
                                                  Data="M0,0 L0,6 L6,0 z" 
                                                  Fill="White" 
                                                  Stroke="#FF818181">
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="135" 
                                                                     CenterY="3" 
                                                                     CenterX="3"/>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" 
                                                     Value="True">
                                                            <Setter Property="RenderTransform" 
                                                        TargetName="ExpandPath">
                                                                <Setter.Value>
                                                                    <RotateTransform Angle="180" 
                                                                         CenterY="3" 
                                                                         CenterX="3"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Fill" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF595959"/>
                                                            <Setter Property="Stroke" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF262626"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" 
                                                     Value="True">
                                                            <Setter Property="Stroke" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF27C7F7"/>
                                                            <Setter Property="Fill" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FFCCEEFB"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" 
                                                               Value="True"/>
                                                                <Condition Property="IsChecked" 
                                                               Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Stroke" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF1CC4F7"/>
                                                            <Setter Property="Fill" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF82DFFB"/>
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <!-- Icon for "Components" Button -->
                            <Rectangle Fill="{StaticResource ComponentsIconBrush}"
                           Style="{StaticResource NavigationTreeIconStyle}"
                           Margin="20,0,0,0"/>
                            <Border x:Name="Bd" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Grid.Column="1" 
                        Padding="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="True">
                                <!-- Text for "Components" Button -->
                                <TextBlock x:Name="textBlock" 
                               Margin="6,0,0,0"
                               Foreground="#FF666666">
                        Components
                                </TextBlock>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" 
                                Grid.ColumnSpan="2" 
                                Grid.Column="1" 
                                Grid.Row="1"/>
                        </Grid>
                    </CheckBox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" 
                         Value="True">
                            <Setter Property="Foreground" 
                            TargetName="textBlock" 
                            Value="#FF999999"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" 
                         Value="False">
                            <Setter Property="Visibility" 
                            TargetName="ItemsHost" 
                            Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" 
                         Value="True">
                            <Setter Property="Foreground" 
                            TargetName="textBlock" 
                            Value="{DynamicResource BrushStyleBlue}"/>
                        </Trigger>
                        <Trigger Property="HasItems" 
                         Value="False">
                            <Setter Property="Visibility" 
                            TargetName="Expander" 
                            Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" 
                         Value="True">
                            <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            <Setter Property="Foreground" 
                            TargetName="textBlock" 
                            Value="#FF3394C7"/>
                            <Setter Property="Background" 
                            TargetName="Bd" 
                            Value="{x:Null}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" 
                                   Value="True"/>
                                <Condition Property="IsSelectionActive" 
                                   Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" 
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            <Setter Property="Foreground" 
                            TargetName="textBlock" 
                            Value="#FF3394C7"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" 
                         Value="False">
                            <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                <Style x:Key="ContentPresenterInsideToggleButtonBlue" 
               TargetType="{x:Type ContentPresenter}"/>

                <!-- Tree View Toggle Button "Project" -->

                <ControlTemplate x:Key="ToggleButtonTextProject" 
                         TargetType="{x:Type TreeViewItem}">
                    <CheckBox Style="{StaticResource TreeViewItemCB}" IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"  ClickMode="Press">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" 
                                      Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" 
                    ClickMode="Press" 
                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                    Margin="-20,0,0,0">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Focusable" 
                                    Value="False"/>
                                        <Setter Property="Width" 
                                    Value="16"/>
                                        <Setter Property="Height" 
                                    Value="16"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="Transparent" 
                                                Height="16" 
                                                Padding="5" 
                                                Width="16">
                                                        <Path x:Name="ExpandPath" 
                                                  Data="M0,0 L0,6 L6,0 z" 
                                                  Fill="White" 
                                                  Stroke="#FF818181">
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="135" 
                                                                     CenterY="3" 
                                                                     CenterX="3"/>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" 
                                                     Value="True">
                                                            <Setter Property="RenderTransform" 
                                                        TargetName="ExpandPath">
                                                                <Setter.Value>
                                                                    <RotateTransform Angle="180" 
                                                                         CenterY="3" 
                                                                         CenterX="3"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Fill" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF595959"/>
                                                            <Setter Property="Stroke" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF262626"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" 
                                                     Value="True">
                                                            <Setter Property="Stroke" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF27C7F7"/>
                                                            <Setter Property="Fill" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FFCCEEFB"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" 
                                                               Value="True"/>
                                                                <Condition Property="IsChecked" 
                                                               Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Stroke" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF1CC4F7"/>
                                                            <Setter Property="Fill" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF82DFFB"/>
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <!-- Icon for "Project" Button -->
                            <Rectangle Fill="{StaticResource ProjectIconBrush}"
                           Style="{StaticResource NavigationTreeIconStyle}"
                           Margin="20,0,0,0"/>
                            <Border x:Name="Bd" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Grid.Column="1" 
                        Padding="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="True">
                                <!-- Text for "Project" Button -->
                                <TextBlock x:Name="textBlock" 
                               Margin="6,0,0,0"
                               Foreground="#FF666666">Project</TextBlock>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" 
                                Grid.ColumnSpan="2" 
                                Grid.Column="1" 
                                Grid.Row="1"/>
                        </Grid>
                    </CheckBox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" 
                         Value="True">
                            <Setter Property="Foreground" 
                            TargetName="textBlock" 
                            Value="#FF999999"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" 
                         Value="False">
                            <Setter Property="Visibility" 
                            TargetName="ItemsHost" 
                            Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" 
                         Value="True">
                            <Setter Property="Foreground" 
                            TargetName="textBlock" 
                            Value="{DynamicResource BrushStyleBlue}"/>
                        </Trigger>
                        <Trigger Property="HasItems" 
                         Value="False">
                            <Setter Property="Visibility" 
                            TargetName="Expander" 
                            Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" 
                         Value="True">
                            <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            <Setter Property="Foreground" 
                            TargetName="textBlock" 
                            Value="#FF3394C7"/>
                            <Setter Property="Background" 
                            TargetName="Bd" 
                            Value="{x:Null}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" 
                                   Value="True"/>
                                <Condition Property="IsSelectionActive" 
                                   Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" 
                            TargetName="Bd" 
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            <Setter Property="Foreground" 
                            TargetName="textBlock" 
                            Value="#FF3394C7"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" 
                         Value="False">
                            <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

                <!-- Tree View Toggle Button "Resources -->

                <ControlTemplate x:Key="ToggleButtonResources" 
                         TargetType="{x:Type TreeViewItem}">
                    <CheckBox Style="{StaticResource TreeViewItemCB}" IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"  ClickMode="Press">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" 
                                      Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" 
                    ClickMode="Press" 
                    IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                    Margin="-20,0,0,0">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Focusable" 
                                    Value="False"/>
                                        <Setter Property="Width" 
                                    Value="16"/>
                                        <Setter Property="Height" 
                                    Value="16"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="Transparent" 
                                                Height="16" 
                                                Padding="5" 
                                                Width="16">
                                                        <Path x:Name="ExpandPath" 
                                                  Data="M0,0 L0,6 L6,0 z" 
                                                  Fill="White" 
                                                  Stroke="#FF818181">
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="135" 
                                                                     CenterY="3" 
                                                                     CenterX="3"/>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" 
                                                     Value="True">
                                                            <Setter Property="RenderTransform" 
                                                        TargetName="ExpandPath">
                                                                <Setter.Value>
                                                                    <RotateTransform Angle="180" 
                                                                         CenterY="3" 
                                                                         CenterX="3"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Fill" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF595959"/>
                                                            <Setter Property="Stroke" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF262626"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" 
                                                     Value="True">
                                                            <Setter Property="Stroke" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF27C7F7"/>
                                                            <Setter Property="Fill" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FFCCEEFB"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" 
                                                               Value="True"/>
                                                                <Condition Property="IsChecked" 
                                                               Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Stroke" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF1CC4F7"/>
                                                            <Setter Property="Fill" 
                                                        TargetName="ExpandPath" 
                                                        Value="#FF82DFFB"/>
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <!-- Icon for "Resources" Button -->
                            <Rectangle Fill="{StaticResource ResourcesIconBrush}"
                           Style="{StaticResource NavigationTreeIconStyle}"
                           Margin="20,0,0,0"/>
                            <Border x:Name="Bd" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Grid.Column="1" 
                        Padding="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="True">
                                <!-- Text for "Resources" Button -->
                                <TextBlock x:Name="textBlock" 
                               Margin="6,0,0,0"
                               Foreground="#FF666666">
                            Resources
                                </TextBlock>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" 
                                Grid.ColumnSpan="2" 
                                Grid.Column="1" 
                                Grid.Row="1"/>
                        </Grid>
                    </CheckBox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" 
                         Value="True">
                            <Setter Property="Foreground" 
                            TargetName="textBlock" 
                            Value="#FF999999"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" 
                         Value="False">
                            <Setter Property="Visibility" 
                            TargetName="ItemsHost" 
                            Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" 
                         Value="True">
                            <Setter Property="Foreground" 
                            TargetName="textBlock" 
                            Value="{DynamicResource BrushStyleBlue}"/>
                        </Trigger>
                        <Trigger Property="HasItems" 
                         Value="False">
                            <Setter Property="Visibility" 
                            TargetName="Expander" 
                            Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" 
                         Value="True">
                            <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            <Setter Property="Foreground" 
                            TargetName="textBlock" 
                            Value="#FF3394C7"/>
                            <Setter Property="Background" 
                            TargetName="Bd" 
                            Value="{x:Null}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" 
                                   Value="True"/>
                                <Condition Property="IsSelectionActive" 
                                   Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" 
                            TargetName="Bd" 
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            <Setter Property="Foreground" 
                            TargetName="textBlock" 
                            Value="#FF3394C7"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" 
                         Value="False">
                            <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </TreeView.Resources>
            <TreeView HorizontalAlignment="Left" 
              x:Name="tvDesign"
              Foreground="{x:Null}" 
              BorderBrush="{x:Null}" 
              Background="WhiteSmoke" 
              ItemContainerStyle="{DynamicResource TreeViewItemStyle1}"
              ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
              Width="295"
              Margin="-20,0,0,0" GotFocus="tvDesign_GotFocus">
                <ScrollViewer VerticalScrollBarVisibility="Auto" 
                      HorizontalScrollBarVisibility="Hidden" 
                      Template="{DynamicResource InternalScrollTree}" 
                      FontFamily="Lato Medium"
                      MaxHeight="596"
                      Cursor="Arrow" 
                      HorizontalAlignment="Left" 
                      VerticalAlignment="Top" 
                      Width="270"
                      Margin="0,10,0,0">
                    <TreeViewItem x:Name="DesignItem" 
                          FontFamily="Lato Semibold"
                          FontSize="16"
                          Height="auto"    
                          Width="295"
                          Style="{DynamicResource TreeViewItemStyle1}" 
                          Cursor="Arrow"
                          Margin="-20,0,0,0"
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          IsExpanded="True">
                        <TreeViewItem.Header>
                            <StackPanel Orientation="Horizontal" 
                                    Style="{DynamicResource TreeViewItemFocusVisual}" 
                                    HorizontalAlignment="Left">
                            </StackPanel>
                        </TreeViewItem.Header>

                        <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                        <TreeViewItem Margin="0,12,0,-4"
                              FontFamily="Lato Medium"
                              Style="{DynamicResource TreeViewItemStyle2}">
                            <TreeViewItem.Header>
                                <StackPanel Orientation="Horizontal"
                        Style="{DynamicResource TreeViewItemFocusVisual}">
                                    <Rectangle Fill="{StaticResource SetupIconBrush}"
                                       Style="{StaticResource NavigationTreeIconStyle}"/>
                                    <Button Content="Setup"
                                    Width="171"
                                    BorderBrush="{x:Null}"
                                    Background="{x:Null}"
                                    Style="{DynamicResource ButtonStyleTreeBlueStart}"
                                    CommandParameter="Setup"/>
                                </StackPanel>
                            </TreeViewItem.Header>
                        </TreeViewItem>
                        <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                        <TreeViewItem Margin="0,12,0,-4"
                              FontFamily="Lato Medium"
                              Style="{DynamicResource TreeViewItemStyle2}">
                            <TreeViewItem.Header>
                                <StackPanel Orientation="Horizontal"
                                    Style="{DynamicResource TreeViewItemFocusVisual}">
                                    <Rectangle Fill="{StaticResource LoadIconBrush}"
                                       Style="{StaticResource NavigationTreeIconStyle}" />
                                    <Button Content="Load"
                                    Width="171"
                                    BorderBrush="{x:Null}"
                                    Background="{x:Null}"
                                    Style="{DynamicResource ButtonStyleTreeBlue}"
                                    CommandParameter="LoadSetup" />
                                </StackPanel>
                            </TreeViewItem.Header>
                        </TreeViewItem>
                        <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                        <TreeViewItem Margin="0,12,0,-4"
                              FontFamily="Lato Medium"
                              Style="{DynamicResource TreeViewItemStyle2}" 
                              Template="{DynamicResource ToggleButtonComponents}"
                              IsExpanded="True" Expanded="TreeViewItem_Expanded">
                            <TreeViewItem.Header>
                                <StackPanel Orientation="Horizontal"
                                    Style="{DynamicResource TreeViewItemFocusVisual}">
                                    <Rectangle Fill="{StaticResource ComponentsIconBrush}"
                                       Style="{StaticResource NavigationTreeIconStyle}" />
                                    <!--<Button Content="Components"
                                    Width="171"
                                    BorderBrush="{x:Null}"
                                    Background="{x:Null}"
                                    Style="{DynamicResource ButtonStyleTreeBlue}" d:IsHidden="True" />-->
                                </StackPanel>
                            </TreeViewItem.Header>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334" HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal"
                                        Style="{DynamicResource TreeViewItemFocusVisual}">
                                        <Rectangle Fill="{StaticResource UtilityIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Utility"
                                        Width="75"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreeOrange}"
                                        CommandParameter="Utility" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334" 
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource ControllerIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Controller"
                                        Width="80"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreeOrange}"
                                        CommandParameter="Controller" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334" 
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource GeneratorIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Generator"
                                        Width="80"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreeOrange}"
                                        CommandParameter="Generator" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource PvIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="PV"
                                        Width="75"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        CommandParameter="PV"
                                        Style="{DynamicResource ButtonStyleTreeOrange}" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal"
                                        Width="137.667">
                                        <Rectangle Fill="{StaticResource StorageIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Storage"
                                        CommandParameter="Storage"
                                        Width="75"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreeOrange}" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource ConverterIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Converter"
                                        Width="104.333"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreeOrange}"
                                        CommandParameter="Converter" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <!--<Separator Style="{DynamicResource SeparatorStyleNoClick}" />-->
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  IsEnabled="False"
                                  HorizontalAlignment="Left"
                                  Visibility="Collapsed">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal"
                                        Width="137.667">
                                        <Rectangle Fill="{StaticResource WindTurbineIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Wind Turbine"
                                        Width="104.333"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        CommandParameter="WindTurbine"
                                        Style="{DynamicResource ButtonStyleTreeOrange}" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                        </TreeViewItem>
                        <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                        <TreeViewItem Margin="0,12,0,-4"
                              FontFamily="Lato Medium"
                              Style="{DynamicResource TreeViewItemStyle2}">
                            <TreeViewItem.Header>
                                <StackPanel Orientation="Horizontal"
                                    Style="{DynamicResource TreeViewItemFocusVisual}">
                                    <Rectangle Fill="{StaticResource IncentivesIconBrush}"
                                       Style="{StaticResource NavigationTreeIconStyle}" />
                                    <Button Content="Incentives"
                                    CommandParameter="Incentive"
                                    Width="87"
                                    BorderBrush="{x:Null}"
                                    Background="{x:Null}"
                                    Style="{DynamicResource ButtonStyleTreeBlue}"
                                    Margin="6,0,0,0" />
                                </StackPanel>
                            </TreeViewItem.Header>
                        </TreeViewItem>
                        <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                        <!--- See Styles above for Toggle Button Controls -->
                        <TreeViewItem Margin="0,12,0,-4"
                              FontFamily="Lato Medium"
                              Style="{DynamicResource TreeViewItemStyle2}" 
                              Template="{DynamicResource ToggleButtonResources}" Expanded="TreeViewItem_Expanded">
                            <TreeViewItem.Header>
                                <StackPanel Orientation="Horizontal"
                                    Style="{DynamicResource TreeViewItemFocusVisual}">
                                    <Rectangle Fill="{StaticResource ResourcesIconBrush}"
                                       Style="{StaticResource NavigationTreeIconStyle}" />
                                    <!--<Button Content="Resources"
                                        Width="87"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreeBlue}"
                                        Margin="6,0,0,0" />-->
                                </StackPanel>
                            </TreeViewItem.Header>
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource SolarIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Solar GHI"
                                        Width="104.333"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreeGreen}"
                                        CommandParameter="Solar" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource FuelIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Fuel"
                                        Width="104.333"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreeGreen}"
                                        CommandParameter="Fuel" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource TemperatureIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Temperature"
                                        Width="104.333"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreeGreen}"
                                        CommandParameter="Temperature" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource SolarDniIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Solar DNI"
                                        Width="104.333"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreeGreen}"
                                        CommandParameter="SolarDni" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <!--<Separator Style="{DynamicResource SeparatorStyleNoClick}" />-->
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  IsEnabled="False"
                                  HorizontalAlignment="Left" 
                                  Visibility="Collapsed">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource WindIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Wind"
                                        Width="104.333"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreeOrange}"
                                        CommandParameter="Wind" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                        </TreeViewItem>
                        <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                        <!--- See styles above for Toggle Button Controls -->
                        <TreeViewItem Margin="0,12,23,-4"
                              FontFamily="Lato Medium"
                              Style="{DynamicResource TreeViewItemStyle2}"
                              Template="{DynamicResource ToggleButtonTextProject}" Expanded="TreeViewItem_Expanded">
                            <TreeViewItem.Header>
                                <StackPanel Orientation="Horizontal"
                                    Style="{DynamicResource TreeViewItemFocusVisual}">
                                    <Rectangle Fill="{StaticResource ProjectIconBrush}"
                                       Style="{StaticResource NavigationTreeIconStyle}" />
                                    <!--<Button Content="Project"
                                        Width="171"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreeBlue}" />-->
                                </StackPanel>
                            </TreeViewItem.Header>
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource EconomicsIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Economics"
                            Width="90"
                            BorderBrush="{x:Null}"
                            Background="{x:Null}"
                            Style="{DynamicResource ButtonStyleTreePurple}"
                            CommandParameter="Economics" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource ConstraintsIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Constraints"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreePurple}"
                                        CommandParameter="Constraints" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource EmissionsIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Emissions"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreePurple}"
                                        CommandParameter="Emissions" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource OptimizerIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Optimization"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreePurple}"
                                        CommandParameter="Optimizer" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource SearchSpaceIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Search Space"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreePurple}" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                            <TreeViewItem Margin="0,12,0,-4"
                                  FontFamily="Lato Medium"
                                  Style="{DynamicResource TreeViewItemStyle3}"
                                  Width="187.334"
                                  HorizontalAlignment="Left">
                                <TreeViewItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{StaticResource SensitivityIconBrush}"
                                           Style="{StaticResource NavigationTreeIconStyle}" />
                                        <Button Content="Sensitivity"
                                        BorderBrush="{x:Null}"
                                        Background="{x:Null}"
                                        Style="{DynamicResource ButtonStyleTreePurple}" />
                                    </StackPanel>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                        </TreeViewItem>
                        <Separator Style="{DynamicResource SeparatorStyleNoClick}" />
                    </TreeViewItem>
                </ScrollViewer>
            </TreeView>

            <!--<ScrollViewer VerticalScrollBarVisibility="Hidden" 
                          HorizontalScrollBarVisibility="Hidden" 
                          Height="37.2" 
                          Width="237.3" 
                          FontFamily="Lato Medium" Margin="0" Cursor="Arrow">
        <TreeViewItem FontFamily="Lato Semibold" 
                      FontSize="16" 
                      Style="{DynamicResource TreeViewItemStyle1}" 
                      Width="237.3" 
                      Height="27.2" 
                      Cursor="Arrow"
                      IsSelected="{Binding ResultsSelected}">
            <TreeViewItem.Header>
                <StackPanel Orientation="Horizontal" 
                            Style="{DynamicResource TreeViewItemFocusVisual}" 
                            Height="39.2">
                    <Button x:Name="button" Content="Results" 
                            Width="211.5" 
                            BorderBrush="{x:Null}" 
                            Background="{x:Null}" 
                            Style="{DynamicResource ButtonStyleTreeGreen}"
                            Margin="4,0,0,10"/>
                </StackPanel>
            </TreeViewItem.Header>
        </TreeViewItem>
    </ScrollViewer>-->

            <TreeViewItem x:Name="ResultsItem" FontFamily="Lato Semibold"
                  Style="{DynamicResource TreeViewItemStyle1}" 
                  FontSize="16"
                  Width="294"
                  Height="40"
                  Cursor="Hand"
                  Margin="1,0,0,0"
                  IsSelected="{Binding ResultsSelected}"
                  Header="Results"
                  HorizontalAlignment="Left" 
                  VerticalAlignment="Center"
                  Padding="8,10,0,0">
                <!--
            <TreeViewItem.Header>
                <StackPanel Orientation="Horizontal"
                            Style="{DynamicResource TreeViewItemFocusVisual}"
                            Height="39.2">
                    
                    <Button x:Name="button"
                            Content="Results"
                            Width="211.5"
                            BorderBrush="{x:Null}"
                            Background="{x:Null}"
                            Style="{DynamicResource ButtonStyleTreeGreen}"
                            Margin="4,0,0,10" />

                </StackPanel>
            </TreeViewItem.Header>-->
            </TreeViewItem>
            <!--<Separator Style="{DynamicResource SeparatorStyleNoClick}" />-->
            <TreeViewItem x:Name="LibraryItem" FontFamily="Lato Semibold"
                  FontSize="16"
                  Style="{DynamicResource TreeViewItemStyle2}"
                  Width="234.327"
                  Height="29.7"
                  Cursor="Arrow"
                  Margin="0,6,0,0"
                  IsSelected="{Binding LibrarySelected}"
                  IsEnabled="False"
                  Header="Library"
                  HorizontalAlignment="Left"
                  Visibility="Collapsed">

            </TreeViewItem>
        </TreeView>

    </Grid>
</Window>
